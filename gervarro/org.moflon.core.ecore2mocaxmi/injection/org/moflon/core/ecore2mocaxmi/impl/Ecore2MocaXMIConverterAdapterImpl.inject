import org.moflon.core.ecore2mocaxmi.utils.GuidManager;
import org.moflon.core.ecore2mocaxmi.utils.PathProvider;

partial class Ecore2MocaXMIConverterAdapterImpl {
 	@members <--
 	 	private GuidManager manager = new GuidManager();
 	 	
 	 -->
 	 
 	@model getChildrenSize(Node node) <--
		return node.getChildren().size();
	-->
	
	@model init(String projectName, Node targetNode) <--
		manager.init(projectName);
	-->
	
	@model getGuid(ENamedElement ecoreElement, String path) <--
		return manager.getGuid(ecoreElement, path);
	-->
	
	@model booleanToString(boolean eBoolean) <--
		return "" + eBoolean;
	-->

	@model intToString(int eInt) <--
		return ""+ eInt;
	-->
	
	@model addSearchElement(ENamedElement ecoreElement, Attribute searchAttribute) <--
		manager.addSearchElement(ecoreElement, searchAttribute);
	-->
	
	@model resolve() <--
		manager.resolve();
	-->
	
	@model instanceofEEnum(EDataType eDataType) <--
		return eDataType instanceof EEnum;
	-->
	
	@model castEEnum(EDataType eDataType) <--
		return EEnum.class.cast(eDataType);
	-->
	
	@model addToPath(String oldPath, ENamedElement element) <--
		return PathProvider.getNewPath(oldPath, element);
	-->
	
	@model isNodeNull(Node node) <--
		return node == null;
	-->
	
	@model clear() <--
		manager.clear();
	-->
	
}