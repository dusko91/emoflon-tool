<?xml version="1.0" encoding="UTF-8"?>
<project name="DemoclesPatternMatcher" default="zip" basedir=".">
	<property name="version" value="0.3.1"/>
	<property name="lib" value="lib"/>
	<property name="plugin.id" value="org.gervarro.democles.emoflon"/>
	<property name="democles.binary.jar" value="${lib}/${plugin.id}_${version}.qualifier.jar"/>
	<property name="democles.source.zip" value="${lib}/src.zip"/>
	
	<target name="init-eclipse">
		<echoxml file=".project">
			<projectDescription>
				<name>DemoclesPatternMatcher</name>
				<comment></comment>
				<projects>
				</projects>
				<buildSpec>
					<buildCommand>
						<name>org.eclipse.jdt.core.javabuilder</name>
						<arguments>
						</arguments>
					</buildCommand>
					<buildCommand>
						<name>org.eclipse.pde.ManifestBuilder</name>
						<arguments>
						</arguments>
					</buildCommand>
					<buildCommand>
						<name>org.eclipse.pde.SchemaBuilder</name>
						<arguments>
						</arguments>
					</buildCommand>
				</buildSpec>
				<natures>
					<nature>org.eclipse.pde.PluginNature</nature>
					<nature>org.eclipse.jdt.core.javanature</nature>
				</natures>
			</projectDescription>
		</echoxml>
		<echoxml file=".classpath">
			<classpath>
				<classpathentry kind="src" path="src"/>
				<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
				<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
				<classpathentry kind="output" path="bin"/>
			</classpath>
		</echoxml>
		<mkdir dir=".settings"/>
		<propertyfile file=".settings/org.eclipse.jdt.core.prefs">
			<entry key="eclipse.preferences.version" value="1"/>
			<entry key="org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode" value="enabled"/>
			<entry key="org.eclipse.jdt.core.compiler.codegen.targetPlatform" value="1.6"/>
			<entry key="org.eclipse.jdt.core.compiler.compliance" value="1.6"/>
			<entry key="org.eclipse.jdt.core.compiler.problem.assertIdentifier" value="error"/>
			<entry key="org.eclipse.jdt.core.compiler.problem.enumIdentifier" value="error"/>
			<entry key="org.eclipse.jdt.core.compiler.source" value="1.6"/>
		</propertyfile>
	</target>

	<target name="init-java-project">
		<tstamp/>
		<mkdir dir="src"/>
		<mkdir dir="bin"/>
		<mkdir dir="META-INF"/>
		<manifest file="META-INF/MANIFEST.MF">
			<attribute name="Manifest-Version" value="1.0"/>
			<attribute name="Bundle-ManifestVersion" value="2"/>
			<attribute name="Bundle-Name" value="EMoflon Democles Pattern Matcher Module"/>
			<attribute name="Bundle-SymbolicName" value="org.gervarro.democles.emoflon"/>
			<attribute name="Bundle-Version" value="${version}.qualifier"/>
			<attribute name="Bundle-RequiredExecutionEnvironment" value="JavaSE-1.6"/> 
			<attribute name="Require-Bundle" value="org.eclipse.emf.codegen.ecore;bundle-version=&quot;2.9.1&quot;,org.eclipse.emf.ecore;bundle-version=&quot;2.9.1&quot;,org.eclipse.emf.ecore.xmi;bundle-version=&quot;2.9.1&quot;,org.moflon.core.utilities;bundle-version=&quot;1.0.0&quot;,org.moflon.ControlFlow;bundle-version=&quot;1.0.0&quot;"/>
			<attribute name="Export-Package" value="org.gervarro.democles.codegen,org.gervarro.democles.codegen.emf,org.gervarro.democles.codegen.stringtemplate,org.gervarro.democles.codegen.stringtemplate.emf,org.gervarro.democles.compiler,org.gervarro.democles.emf,org.gervarro.democles.emf.codegen,org.gervarro.democles.plan,org.gervarro.democles.plan.common,org.gervarro.democles.relational"/>
			<attribute name="Bundle-ClassPath" value="${democles.binary.jar}"/>
		</manifest>
	</target>

	<target name="copy" depends="clean-plugin-dir,init-eclipse,init-java-project">
		<copy todir="${basedir}">
		    <fileset dir="${basedir}/../org.gervarro.democles.compiler">
				<include name="src/**/*.java"/>
		    </fileset>
		    <fileset dir="${basedir}/../org.gervarro.democles.plan">
				<include name="src/**/*.java"/>
		    </fileset>
		    <fileset dir="${basedir}/../org.gervarro.democles.codegen.stringtemplate">
				<include name="templates/stringtemplate/**"/>
				<include name="src/**/*.java"/>
			</fileset>
		    <fileset dir="${basedir}/../org.gervarro.democles.codegen.stringtemplate.emf">
				<include name="src/**/*.java"/>
			</fileset>
		    <fileset dir="${basedir}/../org.gervarro.democles.codegen.emf">
				<include name="templates/stringtemplate/**"/>
				<include name="src/**/*.java"/>
		    </fileset>
		</copy>
	</target>

	<available file="${democles.binary.jar}" property="binary.plugin.exists"/>
	<target name="zip-binary" unless="binary.plugin.exists">
		<jar destfile="${democles.binary.jar}" manifest="META-INF/MANIFEST.MF">
			<fileset dir="bin"/>
			<fileset dir="${basedir}">
				<include name="model/**"/>
				<include name="templates/**"/>
			</fileset>
		</jar>
		<antcall target="clean-java"/>
		<echoxml file=".classpath">
			<classpath>
				<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
				<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
				<classpathentry exported="true" kind="lib" path="${democles.binary.jar}"/>
			</classpath>
		</echoxml>
		<propertyfile file="build.properties">
			<entry key="bin.includes" value="META-INF/,${democles.binary.jar}"/>
		</propertyfile>
	</target>

	<target name="zip" unless="binary.plugin.exists">
		<zip destfile="${democles.source.zip}">
			<fileset dir="src"/>
		</zip>
		<antcall target="zip-binary"/>
		<echoxml file=".classpath">
			<classpath>
				<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
				<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
				<classpathentry exported="true" kind="lib" path="${democles.binary.jar}" sourcepath="${democles.source.zip}"/>
			</classpath>
		</echoxml>
		<propertyfile file="build.properties">
			<entry key="src.includes" value="${democles.source.zip}"/>
			<entry key="bin.includes" value="META-INF/,${democles.binary.jar}"/>
		</propertyfile>
	</target>
	
	<available file="${lib}" property="plugin.dir.exists"/>
	<target name="clean-plugin-dir" if="plugin.dir.exists">
		<delete includeemptyDirs="true">
			<fileset dir="${lib}" includes="**/*"/>
		</delete>
		<delete file="build.properties"/>
	</target>

	<target name="clean-template-dirs">
		<delete dir="model"/>
		<delete includeemptyDirs="true">
			<fileset dir="templates" includes="**/*"/>
		</delete>
	</target>

	<target name="clean-java" depends="clean-template-dirs">
		<delete includeemptyDirs="true">
			<fileset dir="src"/>
			<fileset dir="bin"/>
			<fileset dir=".settings"/>
		</delete>
	</target>

	<target name="clean-all">
		<delete includeemptydirs="true">
			<fileset dir=".">
				<exclude name="build-democles.xml"/>
				<exclude name="${lib}"/>
				<exclude name="templates"/>
				<exclude name="META-INF/MANIFEST.MF"/>
			</fileset>
		</delete>
		<echoxml file=".project">
			<projectDescription>
				<name>${project.name}</name>
				<comment></comment>
				<projects>
				</projects>
				<buildSpec>
				</buildSpec>
				<natures>
				</natures>
			</projectDescription>
		</echoxml>
	</target>
</project>